package za.co.junghans.hszt.semin.ir;

import org.apache.log4j.Logger;
import org.xml.sax.InputSource;

import za.co.junghans.hszt.semin.ir.analyzer.KwAnalyzer;
import za.co.junghans.hszt.semin.ir.analyzer.LuceneKwAnalyzer;

import javax.swing.*;
import javax.xml.xpath.XPath;
import javax.xml.xpath.XPathExpressionException;
import javax.xml.xpath.XPathFactory;
import java.io.StringReader;
import javax.xml.xpath.XPathConstants;

import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Arrays;

import java.util.regex.Pattern;
import java.util.regex.Matcher;

/**
 * User: dkummer
 * Date: 12.06.11
 * Time: 22:42
 */
public class AnalyzerGui {
    private JTextArea txtInputHtml;
    private JButton btnCalculate;
    private JPanel form;
    private JTextField txtKeywords;
    private JTextArea txtResults;

    private Logger log = Logger.getLogger(AnalyzerGui.class);


    public AnalyzerGui() {
        btnCalculate.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent actionEvent) {
                //do it baby!
                log.debug("Do some calculating baby!");
                KwAnalyzer kwAnalyzer = new LuceneKwAnalyzer();
                
                //TODO: Parse txtInputHtml here
                String raw_html = txtInputHtml.getText();
                StringBuffer parsed_text = new StringBuffer();
                           
                // 1. Only look at Contents between <body> and </body>, <title> and </title>
                Pattern p_title = Pattern.compile("<title>(.*)</title>", Pattern.MULTILINE | Pattern.CASE_INSENSITIVE | Pattern.DOTALL);
                Pattern p_body = Pattern.compile("<body.*>(.*)</body>", Pattern.MULTILINE | Pattern.CASE_INSENSITIVE | Pattern.DOTALL);
                
               
                Matcher m_title = p_title.matcher(raw_html);
                Matcher m_body = p_body.matcher(raw_html);
                
                
                while (m_title.find()) {
                	
                	parsed_text.append(m_title.group(1));
                	
                }
                
                while (m_body.find()) {
                	
                	parsed_text.append(m_body.group(1));
                }
                
                log.debug(parsed_text.toString());
                            
                // This only works for valid html documents
                /*
                String docroot = txtInputHtml.getText();
                XPath xxpath = XPathFactory.newInstance().newXPath();
                InputSource inputSource = new InputSource(new StringReader(docroot)); 
                String body = "";
				try {
					body = (String) xxpath.evaluate("//body", inputSource, XPathConstants.STRING);
					log.debug("a");
				} catch (XPathExpressionException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
                */             
                
                
                // 2. Replace tags with blank space so that contents in and outside tags don't stick together.
                
                 	 	
                
                String result = kwAnalyzer.analyze(parsed_text.toString(), Arrays.asList(txtKeywords.getText().split(",")));
                txtResults.setText(result);
            }
        });
    }

    public Container getForm() {
        return form;
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        form = new JPanel();
        form.setLayout(new GridBagLayout());
        final JLabel label1 = new JLabel();
        label1.setText("HTML Input");
        label1.setToolTipText("");
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 1;
        gbc.weightx = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        form.add(label1, gbc);
        txtInputHtml = new JTextArea();
        txtInputHtml.setEditable(true);
        txtInputHtml.setText("<title>MYTitle asdad</title>\n\r<body>foo \n\r bar</body>");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 2;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        form.add(txtInputHtml, gbc);
        final JLabel label2 = new JLabel();
        label2.setText("Keywords");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 4;
        gbc.weightx = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        form.add(label2, gbc);
        txtKeywords = new JTextField();
        txtKeywords.setText("Keyword 1, Keyword 2");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 5;
        gbc.weightx = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        form.add(txtKeywords, gbc);
        btnCalculate = new JButton();
        btnCalculate.setText("Calculate!");
        btnCalculate.setMnemonic('C');
        btnCalculate.setDisplayedMnemonicIndex(0);
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 6;
        gbc.weightx = 1.0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        form.add(btnCalculate, gbc);
        final JPanel spacer1 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.VERTICAL;
        form.add(spacer1, gbc);
        final JPanel spacer2 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        form.add(spacer2, gbc);
        final JPanel spacer3 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 2;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        form.add(spacer3, gbc);
        final JPanel spacer4 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 9;
        gbc.fill = GridBagConstraints.VERTICAL;
        form.add(spacer4, gbc);
        final JLabel label3 = new JLabel();
        label3.setText("Results");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 7;
        gbc.anchor = GridBagConstraints.WEST;
        form.add(label3, gbc);
        txtResults = new JTextArea();
        txtResults.setEditable(false);
        txtResults.setEnabled(false);
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 8;
        gbc.fill = GridBagConstraints.BOTH;
        form.add(txtResults, gbc);
        label1.setLabelFor(txtInputHtml);
        label2.setLabelFor(txtKeywords);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return form;
    }
}
